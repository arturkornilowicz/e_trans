:: Number e is Transcendental
::  by Tomasz Korni{\l}owicz

environ

 vocabularies NUMBERS, SUBSET_1, CARD_1, ARYTM_1, TARSKI, ARYTM_3, REAL_1,
      NAT_1, INT_1, XCMPLX_0, LIOUVIL1, COMPLEX1, NEWTON, IRRAT_1, FUNCT_7,
      FINSET_1, FUNCT_1, CARD_3, ALGNUM_1, COMPLFLD, XBOOLE_0, POLYNOM1,
      RELAT_1, VECTSP_1, POLYNOM5, XXREAL_0, FINSEQ_1, GAUSSINT, RATFUNC1,
      MESFUNC1, SUPINF_2, POLYNOM2, C0SP1, FUNCSDOM, STRUCT_0, POLYNOM3,
      VALUED_0, INT_3, ALGSEQ_1, GROUP_1, PARTFUN1, CAT_1, ALGSTR_0, MSAFREE2,
      XXREAL_1, ORDINAL2, XXREAL_2, FDIFF_1, MEASURE5, ORDINAL4, FINSEQ_2,
      BINOP_2, SETWISEO, WAYBEL_8, POWER, E, POLYDIFF, SERIES_1, RLVECT_1,
      LATTICES, SIN_COS, VALUED_1, MEMBERED, FUNCOP_1, SQUARE_1, AFINSQ_1;
 notations TARSKI, XBOOLE_0, SUBSET_1, FINSET_1, RELAT_1, FUNCT_1, RELSET_1,
      PARTFUN1, FUNCT_2, AFINSQ_1,
      FINSEQ_1, NUMBERS, XCMPLX_0, COMPLEX1, XREAL_0, NAT_1, NAT_D,
      FINSEQ_2, BINOP_2, SETWOP_2, XXREAL_0, XXREAL_2, RCOMP_1, SQUARE_1,
      MEMBERED, FUNCOP_1, RFUNCT_1, VALUED_0,
      VALUED_1, INT_1, POWER,
      NEWTON, RAT_1, COMSEQ_2, MEASURE5, IRRAT_1, FCONT_1,
      FDIFF_1, RVSUM_1, SIN_COS, STRUCT_0, ALGSTR_0,
      RLVECT_1, GROUP_1, GROUP_4, VECTSP_1, C0SP1,
      INT_3, COMPLFLD, GAUSSINT, NORMSP_1,
      ALGSEQ_1, POLYNOM3, POLYNOM4, POLYNOM5,
      UPROOTS, RATFUNC1, RING_4, ALGNUM_1, POLYDIFF, FVSUM_1, LIOUVIL1;
 constructors NEWTON, ALGNUM_1, ALGSEQ_1, C0SP1, POLYNOM4, FUNCT_7, TOPMETR,
      EC_PF_1, BINOP_2, NAT_D, RATFUNC1, RCOMP_1, UPROOTS, GR_CY_1, FVSUM_1,
      GAUSSINT, REALSET1, POLYDIFF, XXREAL_2, FCONT_1, MEASURE5, COMSEQ_2,
      GROUP_4, FINSOP_1, ALGSTR_1, LIOUVIL1, POWER, SIN_COS, RFUNCT_1,
      SQUARE_1;
 registrations XREAL_0, RELAT_1, ORDINAL1, RAT_1, INT_1, XXREAL_0, INT_6,
      VECTSP_1, POLYNOM3, STRUCT_0, MEMBERED, RELSET_1, POLYNOM5, RING_4,
      XCMPLX_0, NUMBERS, XBOOLE_0, NAT_1, VALUED_0, RATFUNC1, FINSEQ_1, NEWTON,
      FINSEQ_2, WSIERP_1, ABSVALUE, NIVEN, COMPLFLD, ALGSTR_1, POLYNOM4,
      GAUSSINT, INT_3, SUBSET_1, NEWTON04, UPROOTS, POLYDIFF, XXREAL_1,
      XXREAL_2, FINSET_1, FCONT_1, COMPLEX1, RCOMP_1, IDEAL_1, RFUNCT_1,
      PREPOWER, LIOUVIL1, ALGNUM_1, LIOUVIL2, VALUED_1, PARTFUN1, FUNCT_2,
      FDIFF_1, FUNCOP_1, SQUARE_1, PARTFUN3, RLVECT_1;
 requirements REAL, NUMERALS, SUBSET, BOOLE, ARITHM;
 definitions TARSKI, XBOOLE_0, RELAT_1, FUNCT_1, FUNCT_2,
      STRUCT_0, ALGSEQ_1, C0SP1, POLYNOM5, RATFUNC1,
      ALGNUM_1, MEASURE5, POLYDIFF;
 equalities STRUCT_0, VECTSP_1, GAUSSINT, RATFUNC1, POLYNOM3, INT_3, COMPLEX1,
      REALSET1, POLYDIFF, XCMPLX_0, SIN_COS, VALUED_1, SQUARE_1;
 expansions TARSKI, ALGNUM_1, UPROOTS, ALGSEQ_1, RATFUNC1, POLYNOM5, FDIFF_1,
      INT_1, POLYDIFF;
 theorems XREAL_0, NEWTON, XXREAL_0, XREAL_1, XCMPLX_1, NAT_1, PREPOWER,
      ALGNUM_1, COMPLFLD, RING_3, POLYNOM4, UPROOTS, INT_1, GAUSSINT, C0SP1,
      FUNCT_2, ALGSEQ_1, RLVECT_1, FINSEQ_3, FINSEQ_2, ZFMISC_1, FUNCT_7,
      RATFUNC1, RELAT_1, FINSEQ_1, FUNCT_1, POLYDIFF, XXREAL_2, ROLLE,
      COMPLEX1, POLYNOM5, XXREAL_1, XBOOLE_0, TARSKI, FDIFF_1, ABSVALUE,
      VALUED_1, INTEGRA5, INTEGRA1, RAT_1, NAT_3, FVSUM_1, NIVEN, NAT_D,
      RVSUM_1, INT_2, XCMPLX_0, NUMBERS, RING_2, GROUP_4, LIOUVIL1, LIOUVIL2,
      POWER, POLYNOM3, IRRAT_1, SIN_COS, FDIFF_2, RFUNCT_1, XBOOLE_1, SQUARE_1,
      VALUED_2, NORMSP_1;
 schemes FRAENKEL, FINSEQ_1, FINSEQ_2, POLYNOM3, RECDEF_1, NAT_1;

begin :: Preliminaries

reserve m,n for Nat;
reserve r for Real;

  set E = exp_R;
  set Z = 0_.F_Real;

Lm1: <%0.F_Real%> = Z by POLYNOM5:34;

theorem
  for R being non-empty Relation holds R"{{}} = {}
  proof
    let R be non-empty Relation;
    thus R"{{}} c= {}
    proof
      let x be object;
      assume x in R"{{}};
      then consider y being object such that
A1:   y in rng R and
      [x,y] in R and
A2:   y in {{}} by RELAT_1:131;
      y = {} by A2,TARSKI:def 1;
      hence thesis by A1,RELAT_1:def 9;
    end;
    thus thesis;
  end;

registration
  cluster non-empty differentiable for Function of REAL,REAL;
  existence
  proof
    take REAL-->In(1,REAL);
    thus thesis;
  end;
end;

registration
  let f be non-empty Function of REAL,REAL;
  cluster f^2 -> non-empty;
  coherence;
end;

theorem Th2:
  for f being non-empty Function of REAL, REAL holds f.r <> 0
  proof
    let f be non-empty Function of REAL,REAL;
    dom f = REAL by FUNCT_2:def 1;
    then f.r in rng f by XREAL_0:def 1,FUNCT_1:3;
    hence f.r <> 0 by RELAT_1:def 9;
  end;

theorem Th3:
  for f being non-empty complex-valued Function holds f" = f^
  proof
    let f be non-empty complex-valued Function;
    thus
A1: dom(f") = dom f \ f"{0} by VALUED_1:def 7
    .= dom(f^) by RFUNCT_1:def 2;
    let x be object;
    assume x in dom(f");
    hence (f^).x = (f.x)" by A1,RFUNCT_1:def 2
    .= (f").x by VALUED_1:10;
  end;

theorem Th4:
  for f being complex-valued Function
  for g being non-empty complex-valued Function holds
  f /" g = f / g
  proof
    let f be complex-valued Function;
    let g be non-empty complex-valued Function;
    thus
A1: dom(f/"g) = dom f /\ (dom g \ g"{0}) by VALUED_1:16
    .= dom(f/g) by RFUNCT_1:def 1;
    let x be object;
    assume x in dom(f/"g);
    hence (f/g).x = f.x / g.x by A1,RFUNCT_1:def 1
    .= (f/"g).x by VALUED_1:17;
  end;

theorem Th5:
  for f being non-empty complex-valued Function holds f/"(f^2) = f"
  proof
    let f be non-empty complex-valued Function;
A1: dom(f") = dom f by VALUED_1:def 7;
    thus
A2: dom (f/"(f^2)) = dom f /\ dom (f^2) by VALUED_1:16
    .= dom f /\ dom f by VALUED_1:11
    .= dom (f") by VALUED_1:def 7;
    let x be object;
    set a = f.x;
    assume x in dom (f/"(f^2));
    then
A3: a <> {} by A1,A2,FUNCT_1:def 9;
    thus (f/"(f^2)).x = a/((f^2).x) by VALUED_1:17
    .= a/(a^2) by VALUED_1:11
    .= a*(a"*a") by XCMPLX_1:204
    .= a*a"*a"
    .= 1*a" by A3,XCMPLX_0:def 7
    .= (f").x by VALUED_1:10;
  end;

theorem Th6:
  for f, g, h being complex-valued Function
  st dom f c= dom h & dom g c= dom h & h is non-empty
  holds f/"g = (f(#)h)/"(g(#)h)
  proof
    let f, g, h be complex-valued Function;
    assume
A1: dom f c= dom h;
    then
A2: dom f /\ dom h = dom f by XBOOLE_1:28;
    assume dom g c= dom h;
    then
A3: dom g /\ dom h = dom g by XBOOLE_1:28;
A4: dom(f(#)h) = dom f /\ dom h by VALUED_1:def 4;
A5: dom(g(#)h) = dom g /\ dom h by VALUED_1:def 4;
    assume
A6: h is non-empty;
A7: dom(f/"g) = dom(f) /\ dom (g) by VALUED_1:16;
    hence dom(f/"g) = dom((f(#)h)/"(g(#)h)) by A2,A3,A4,A5,VALUED_1:16;
    let x be object;
    assume
A8: x in dom(f/"g);
A9: (f(#)h).x = f.x * h.x by VALUED_1:5;
A10: (g(#)h).x = g.x * h.x by VALUED_1:5;
    x in dom f by A7,A8,XBOOLE_0:def 4;
    then
A11: h.x <> {} by A1,A6,FUNCT_1:def 9;
    thus (f/"g).x = f.x / g.x by VALUED_1:17
    .= (f.x * h.x) / (g.x * h.x) by A11,XCMPLX_1:91
    .= ((f(#)h)/"(g(#)h)).x by A9,A10,VALUED_1:17;
  end;

registration
  let f be differentiable Function of REAL,REAL;
  let g be non-empty differentiable Function of REAL,REAL;
  cluster f /" g -> differentiable for Function of REAL,REAL;
  coherence
  proof
    let h be Function of REAL,REAL such that
A1: h = f /" g;
A2: f /" g = f / g by Th4;
    let r;
A3: f is_differentiable_in r & g is_differentiable_in r by POLYDIFF:def 2;
    g.r <> 0 by Th2;
    hence thesis by A1,A2,A3,FDIFF_2:14;
  end;
end;

registration
  let f be non-empty differentiable Function of REAL,REAL;
  cluster f" -> differentiable for Function of REAL,REAL;
  coherence
  proof
    let g be Function of REAL,REAL such that
A1: g = f";
    let r;
A2: f.r <> 0 by Th2;
    f is_differentiable_in r by POLYDIFF:def 2;
    then f^ is_differentiable_in r by A2,FDIFF_2:15;
    hence g is_differentiable_in r by A1,Th3;
  end;
end;

theorem Th7:
  for f being non-empty differentiable Function of REAL,REAL holds
  f"`| = -(f`|)/"(f^2)
  proof
    let f be non-empty differentiable Function of REAL,REAL;
    let r be Element of REAL;
A1: f" = f^ by Th3;
A2: f.r <> 0 by Th2;
A3: f is_differentiable_in r by POLYDIFF:9;
A4: diff(f,r) = (f `|).r by POLYDIFF:10;
A5: (f.r)^2 = (f^2).r by VALUED_1:11;
    thus (f" `|).r = diff(f",r) by POLYDIFF:10
    .= -diff(f,r)/(f.r)^2 by A1,A2,A3,FDIFF_2:15
    .= -(((f `|)/"(f^2)).r) by A4,A5,VALUED_1:17
    .= (-(f `|)/"(f^2)).r by VALUED_1:8;
  end;

theorem
  for f being differentiable Function of REAL,REAL
  for g being non-empty differentiable Function of REAL,REAL holds
  (f /" g) `| = ((f`|)(#)g - f(#)(g`|)) /" (g^2)
  proof
    let f be differentiable Function of REAL,REAL;
    let g be non-empty differentiable Function of REAL,REAL;
A1: ((f `|)(#)g) /" (g^2) = ((f `|)(#)g) / (g^2) by Th4;
A2: (f(#)(g `|))/"(g^2) = (f(#)(g `|))/(g^2) by Th4;
A3: ((f `|)(#)g-f(#)(g `|))/"(g^2) = ((f `|)(#)g-f(#)(g `|))/(g^2) by Th4;
A4: dom(f `|) = REAL & dom(g) = REAL by FUNCT_2:def 1;
A5: (f `|) /" g = ((f `|)(#)g)/"(g(#)g) by A4,Th6;
    thus (f /" g) `| = g"(#)(f`|) + f(#)((g") `|) by POLYDIFF:16
    .= (f `|) /" g + f(#) -((g `|)/"(g^2)) by Th7
    .= (f `|) /" g + -((g `|)/"(g^2)(#)f) by VALUED_2:25
    .= (f `|) /" g - f(#)(g `|)/"(g^2) by VALUED_2:20
    .= ((f `|)(#)g - f(#)(g `|)) /" (g^2) by A1,A2,A3,A5,RFUNCT_1:39;
  end;

theorem
  exp_R".r = 1/(exp_R.r) by VALUED_1:10;

registration
  cluster exp_R -> differentiable;
  coherence by SIN_COS:65;
end;

registration
  cluster exp_R -> non-empty;
  coherence
  proof
    let x be object;
    assume x in dom E;
    hence thesis by SIN_COS:54;
  end;
end;

registration
  cluster exp_R" -> differentiable for Function of REAL,REAL;
  coherence;
end;

theorem Th10:
  exp_R `| = exp_R
  proof
    let r be Element of REAL;
    thus E`|.r = diff(E,r) by POLYDIFF:10
    .= E.r by SIN_COS:66;
  end;

theorem Th11:
  exp_R" `| = -exp_R"
  proof
    thus E"`| = -E/"(E^2) by Th7,Th10
    .= -E" by Th5;
  end;

begin

set e = number_e;

reserve c for Element of F_Complex;
reserve p for Polynomial of F_Real;

:: definition
::   let f be FinSequence;
::   attr f is R_polynomial_yielding means
::   for n st 1 <= n <= len f holds f.n is Polynomial of F_Real;
:: end;

:: registration
::   cluster R_polynomial_yielding for FinSequence;
::   existence;
:: end;

theorem Th12:
  for R being add-associative right_zeroed right_complementable distributive
              non empty doubleLoopStr
  for p, q being Polynomial of R holds p + q - q = p
  proof
    let R be add-associative right_zeroed right_complementable distributive
             non empty doubleLoopStr;
    let p, q be Polynomial of R;
    let n be Element of NAT;
    thus (p+q-q).n = (p+q).n-q.n by NORMSP_1:def 3
    .= p.n+q.n-q.n by NORMSP_1:def 2
    .= p.n+(q.n-q.n) by RLVECT_1:28
    .= p.n+0.R by RLVECT_1:15
    .= p.n;
  end;

theorem Th13:
  poly_diff 0_.F_Real = 0_.F_Real by POLYDIFF:46;

definition
  let p be Polynomial of F_Real;
  set N = len(p)+1;
  set D = the carrier of Polynom-Ring F_Real;
  reconsider p1 = p as Element of D by POLYNOM3:def 10;
  defpred P[object,object,object] means
   for q being Polynomial of F_Real st q = $2 holds $3 = poly_diff(q);
  func diff_seq(p) -> FinSequence of Polynom-Ring F_Real means :Def1:
  len(it) = len(p)+1 & it.1 = p &
  for n st 1 <= n < len(it) holds
   for q being Polynomial of F_Real st q = it.n holds it.(n+1) = poly_diff(q);
  existence
  proof
A1: for n being Nat st 1 <= n & n < N for x being Element of D
    ex y being Element of D st P[n,x,y]
    proof
      let n;
      assume 1 <= n & n < N;
      let x be Element of D;
      reconsider y = poly_diff(x) as Element of D by POLYNOM3:def 10;
      take y;
      thus thesis;
    end;
    consider F being FinSequence of D such that
A2: len F = N and
A3: F.1 = p1 or N = 0 and
A4: for n st 1 <= n & n < N holds P[n,F.n,F.(n+1)]
    from RECDEF_1:sch 4(A1);
    take F;
    thus len(F) = len(p)+1 by A2;
    thus F.1 = p by A3;
    thus thesis by A2,A4;
  end;
  uniqueness
  proof
    let F,G be FinSequence of Polynom-Ring F_Real such that
A5: len(F) = N and
A6: F.1 = p and
A7: for n st 1 <= n < len(F) holds
    for q being Polynomial of F_Real st q = F.n holds F.(n+1) = poly_diff(q)
    and
A8: len(G) = N and
A9: G.1 = p and
A10: for n st 1 <= n < len(G) holds
    for q being Polynomial of F_Real st q = G.n holds G.(n+1) = poly_diff(q);
A11: for n st 1 <= n & n < N for x,y1,y2 being Element of D st
    P[n,x,y1] & P[n,x,y2] holds y1 = y2
    proof
      let n;
      assume 1 <= n & n < N;
      let x,y1,y2 be Element of D;
      assume P[n,x,y1];
      then y1 = poly_diff(x);
      hence thesis;
    end;
A12: len F = N & (F.1 = p1 or N = 0) &
    for n st 1 <= n & n < N holds P[n,F.n,F.(n+1)] by A5,A6,A7;
A13: len G = N & (G.1 = p1 or N = 0) &
    for n st 1 <= n & n < N holds P[n,G.n,G.(n+1)] by A8,A9,A10;
    thus F = G from RECDEF_1:sch 8(A11,A12,A13);
  end;
end;

theorem
  diff_seq(0_.F_Real) = <*0_.F_Real*>
  proof
    len Z = 0 by POLYNOM4:3;
    then
A1: len diff_seq(Z) = 0+1 by Def1;
    diff_seq(Z).1 = Z by Def1;
    hence thesis by A1,FINSEQ_1:40;
  end;

theorem Th15:
  p <> 0_.F_Real implies diff_seq(p) = <*p*>^diff_seq(poly_diff(p))
  proof
    assume p <> Z;
    then len poly_diff(p) = len p - 1 by POLYDIFF:44;
    then
A1: len diff_seq(poly_diff(p)) = len p - 1 + 1 by Def1;
A2: len <*p*> = 1 by FINSEQ_1:39;
A3: len diff_seq(p) = len p + 1 by Def1;
    then
A4: len diff_seq(p) = len (<*p*>^diff_seq(poly_diff(p))) by A1,A2,FINSEQ_1:22;
    for k being Nat st 1 <= k & k <= len diff_seq(p) holds
     diff_seq(p).k = (<*p*>^diff_seq(poly_diff(p))).k
    proof
      let k be Nat such that
A5:   1 <= k and
A6:   k <= len diff_seq(p);
      reconsider n = k-1 as Element of NAT by A5,INT_1:5;
      per cases by A5,XXREAL_0:1;
      suppose k = 1;
        hence thesis by Def1;
      end;
      suppose
A7:     1 < k;
        defpred P[Nat] means 1 <= $1 & $1 <= len p implies
         diff_seq(p).($1+1) = diff_seq(poly_diff(p)).$1;
A8:     P[0];
A9:     for z being Nat st P[z] holds P[z+1]
        proof
          let z be Nat such that
A10:      P[z] and
A11:      1 <= z+1 and
A12:      z+1 <= len p;
          z+0 < z+1 by XREAL_1:8;
          then
A13:      z < len diff_seq(poly_diff(p)) by A1,A12,XXREAL_0:2;
          len p + 0 < len p + 1 by XREAL_1:8;
          then
A14:      z+1 < len diff_seq(p) by A3,A12,XXREAL_0:2;
          set q = diff_seq(p).(z+1);
          z+1 in dom diff_seq(p) by A11,A14,FINSEQ_3:25;
          then q in rng diff_seq(p) by FUNCT_1:3;
          then reconsider q as Polynomial of F_Real by POLYNOM3:def 10;
          per cases by NAT_1:14;
          suppose
A15:        z = 0;
            then q = p by Def1;
            hence diff_seq(poly_diff(p)).(z+1) = poly_diff(q) by A15,Def1
            .= diff_seq(p).(z+1+1) by A14,A15,Def1;
          end;
          suppose
A16:        1 <= z;
            z <= z+1 by NAT_1:11;
            hence diff_seq(poly_diff(p)).(z+1) = poly_diff(q)
            by A10,A12,A13,A16,Def1,XXREAL_0:2
            .= diff_seq(p).(z+1+1) by A11,A14,Def1;
          end;
        end;
A17:    for z being Nat holds P[z] from NAT_1:sch 2(A8,A9);
A18:    1 <= n by A7,INT_1:52;
A19:    n <= len p + 1 - 1 by A6,A3,XREAL_1:9;
        then
A20:    n in dom diff_seq(poly_diff(p)) by A1,A18,FINSEQ_3:25;
        k = n+1;
        hence diff_seq(p).k = diff_seq(poly_diff(p)).n by A17,A18,A19
        .= (<*p*>^diff_seq(poly_diff(p))).(n+1) by A20,FINSEQ_3:103
        .= (<*p*>^diff_seq(poly_diff(p))).k;
      end;
    end;
    hence thesis by A4,FINSEQ_1:14;
  end;

theorem Th16:
  diff_seq(0_.F_Real) = <*0_.F_Real*>
  proof
    len Z = 0 by POLYNOM4:3;
    then
A1: len diff_seq(Z) = 0+1 by Def1;
    diff_seq(Z).1 = Z by Def1;
    hence thesis by A1,FINSEQ_1:40;
  end;

definition
  let p;
  func Sum_of_diffs(p) -> Polynomial of F_Real equals
  Sum diff_seq(p);
  coherence by POLYNOM3:def 10;
end;

theorem Th17:
  Sum_of_diffs 0_.F_Real = 0_.F_Real
  proof
    reconsider P = Z as Element of Polynom-Ring F_Real by POLYNOM3:def 10;
    diff_seq(Z) = <*P*> by Th16;
    hence thesis by RLVECT_1:44;
  end;

theorem Th18:
  p + Sum_of_diffs(poly_diff(p)) = Sum_of_diffs(p)
  proof
    reconsider P = p as Element of Polynom-Ring F_Real by POLYNOM3:def 10;
    per cases;
    suppose
A1:   p <> Z;
A2:   Sum <*P*> = P by RLVECT_1:44;
      thus p + Sum_of_diffs(poly_diff(p)) = P + Sum diff_seq(poly_diff(p))
      by POLYNOM3:def 10
      .= Sum(<*P*>^diff_seq(poly_diff(p))) by A2,RLVECT_1:41
      .= Sum_of_diffs(p) by A1,Th15;
    end;
    suppose
A3:   p = Z;
      hence p + Sum_of_diffs(poly_diff(p)) = Sum_of_diffs(poly_diff(Z))
      by POLYNOM3:28
      .= Sum_of_diffs(p) by A3,POLYDIFF:46;
    end;
  end;

theorem Th19:
  poly_diff(Sum_of_diffs(p)) = Sum_of_diffs(poly_diff(p))
  proof
    set P = poly_diff(Sum_of_diffs(p));
    set Q = Sum_of_diffs(poly_diff(p));
    set S = diff_seq(poly_diff(p));
    defpred P[Nat] means for p st $1 = len p
     holds poly_diff(Sum_of_diffs(p)) = Sum_of_diffs(poly_diff(p));
A1: P[0]
    proof
      let p;
      assume 0 = len p;
      then p = Z by Lm1,ALGSEQ_1:14;
      hence thesis by Th13,Th17;
    end;
A2: for k being Nat st P[k] holds P[k+1]
    proof
      let k be Nat;
      assume
A3:   P[k];
      let p such that
A4:   k+1 = len p;
      set p1 = poly_diff(p);
      len p1 = k+1-1 by Lm1,A4,ALGSEQ_1:14,POLYDIFF:44;
      then
A5:   poly_diff(Sum_of_diffs(p1)) = Sum_of_diffs(poly_diff(p1)) by A3;
      reconsider P = p as Element of Polynom-Ring F_Real by POLYNOM3:def 10;
A6:   Sum <*P*> = P by RLVECT_1:44;
      p <> Z by A4,POLYNOM4:3;
      then diff_seq(p) = <*p*>^diff_seq(p1) by Th15;
      then Sum_of_diffs(p) = Sum <*P*> + Sum diff_seq(p1) by RLVECT_1:41
      .= p + Sum_of_diffs(p1) by A6,POLYNOM3:def 10;
      hence poly_diff(Sum_of_diffs(p))
       = p1 + Sum_of_diffs(poly_diff(p1)) by A5,POLYDIFF:47
      .= Sum_of_diffs(p1) by Th18;
    end;
A7: for k being Nat holds P[k] from NAT_1:sch 2(A1,A2);
    len p = len p;
    hence thesis by A7;
  end;

theorem Th20:
  Sum_of_diffs(p) = p + poly_diff(Sum_of_diffs(p))
  proof
    reconsider p1 = p as Element of Polynom-Ring F_Real by POLYNOM3:def 10;
A1: Sum_of_diffs(poly_diff(p)) =  poly_diff(Sum_of_diffs(p)) by Th19;
A2: Sum <*p1*> = p1 by RLVECT_1:44;
    per cases;
    suppose p <> Z;
      hence Sum_of_diffs(p) = Sum(<*p1*>^diff_seq(poly_diff(p))) by Th15
      .= Sum(<*p1*>) + Sum diff_seq(poly_diff(p)) by RLVECT_1:41
      .= p + poly_diff(Sum_of_diffs(p)) by A1,A2,POLYNOM3:def 10;
    end;
    suppose
A3:   p = Z;
      hence Sum_of_diffs(p) = poly_diff(Sum_of_diffs(p)) by Th17,POLYDIFF:46
      .= p + poly_diff(Sum_of_diffs(p)) by A3,POLYNOM3:28;
    end;
  end;

theorem Th21:
  Sum_of_diffs(p) - poly_diff(Sum_of_diffs(p)) = p
  proof
    Sum_of_diffs(p) = p + poly_diff(Sum_of_diffs(p)) by Th20;
    hence thesis by Th12;
  end;

theorem Th22:
  Eval Sum_of_diffs(p) - ( (Eval Sum_of_diffs(p)) `| ) = Eval p
  proof
    set S = Sum_of_diffs(p);
    Eval S`| = Eval(poly_diff(S)) by POLYDIFF:61;
    hence Eval S - (Eval S`|) = Eval(S-poly_diff(S)) by POLYDIFF:57
    .= Eval p by Th21;
  end;

definition
  let p;
  func WFx(p) -> Function of REAL,REAL equals
  exp_R" (#) Eval Sum_of_diffs(p);
  coherence;
end;

theorem
  WFx(p).r = 1/(exp_R.r) * (Eval Sum_of_diffs(p)).r
  proof
    E".r = 1/(E.r) by VALUED_1:10;
    hence thesis by VALUED_1:5;
  end;

registration
  let p;
  cluster WFx(p) -> differentiable;
  coherence;
end;

theorem
  (WFx(p)) `| = - (exp_R") (#) Eval p
  proof
    set f = E";
    set g = Eval Sum_of_diffs(p);
    thus (WFx(p)) `| = (-f)(#)g + (--f)(#)(g`|) by Th11,POLYDIFF:16
    .= (-f)(#)g - (-f)(#)(g`|) by VALUED_2:25
    .= (-f)(#)(g - (g`|)) by RFUNCT_1:15
    .= -f(#)(g - (g`|)) by VALUED_2:25
    .= -f(#)Eval p by Th22;
  end;

registration
  cluster number_e -> transcendental;
  coherence
  proof
    e in COMPLEX by XCMPLX_0:def 2;
    then reconsider e as Element of F_Complex by COMPLFLD:def 1;
    assume number_e is algebraic;
    then consider f being non-zero INT -valued Polynomial of F_Complex
    such that
A1: e is_a_root_of f by LIOUVIL2:25;
    thus contradiction;
  end;
end;

